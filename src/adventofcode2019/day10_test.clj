(ns adventofcode2019.day10-test
  (:require [clojure.test :refer [deftest is]]
            [adventofcode2019.day10 :refer :all]))

(def sample1 (->points ".#..#\n.....\n#####\n....#\n...##"))

(deftest day10-one (is (= (best-location sample1) [8 [3 4]])))

(def sample2
  (->points
    ".#....#####...#..\n##...##.#####..##\n##...#...#.#####.\n..#.....X...###..\n..#.#.....#....##"))

(def sample3
  (->points
    ".#..##.###...#######\n##.############..##.\n.#.######.########.#\n.###.#######.####.#.\n#####.##.#.##.###.##\n..#####..#.#########\n####################\n#.####....###.#.#.##\n##.#################\n#####.##.###..####..\n..######..##.#######\n####.##.####...##..#\n.#####..#.######.###\n##...#.##########...\n#.##########.#######\n.####.#.###.###.#.##\n....##.##.###..#####\n.#.#.###########.###\n#.#.#.#####.####.###\n###.##.####.##.#..##\n"))

(deftest day10-two
  (is (= (take 3 (asteroids sample2 [8 3])) [[8 1] [9 0] [9 1]]))
  (is (= (count (asteroids sample2 [8 3])) 36))
  (is (= (last (asteroids sample2 [8 3])) [14 3]))
  (is (= (nth (asteroids sample3 [11 13]) 0) [11 12]))
  (is (= (nth (asteroids sample3 [11 13]) 199) [8 2])))
